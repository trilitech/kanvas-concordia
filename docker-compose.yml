# Kanvas is a distributed system with multiple databases, servers, and web browser clients
# For development, we can spin everything up via docker-compose


services:
  store-db:
    image: postgres:13
    ports:
      - 54320:5432
    environment:
      POSTGRES_USER: store_pguser
      POSTGRES_PASSWORD: store_pgpass
      POSTGRES_DB: dev_database
    command:
      - postgres
      - -c
      - wal_level=logical  # <- required for logical replication
    restart: on-failure

  store-api:
    build:
      context: .
      dockerfile: ./store-api-server/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 3005:3000
    links:
      - store-db
    environment:
      PGHOST: store-db
      PGPORT: 5432
      PGUSER: store_pguser
      PGPASSWORD: store_pgpass
      PGDATABASE: dev_database
      KANVAS_API_PORT: 3000
    env_file:
      - store-api-server/.env
    entrypoint: |-
      bash -c '
        set -e
        ./script/wait-db
        INIT_QUEPASA=false ./script/migrate up
        if [[ "`psql -c \"select count(1) from nft_category\" -tA`" == "0" ]]; then
          psql < script/populate-sowvital.sql
        fi
        if [ "${STORE_API_ENABLED:-yes}" == "yes" ]; then
          yarn start:prod
        fi
      '
    restart: on-failure

  store-quepasa:
    image: ghcr.io/tzconnectberlin/que-pasa:1.2.5
    volumes:
      - ./config:/config
    environment:
      PGHOST: store-db
      PGPORT: 5432
      PGUSER: store_pguser
      PGPASSWORD: store_pgpass
      PGDATABASE: dev_database
      DATABASE_URL: "postgres://store_pguser:store_pgpass@store-db:5432/dev_database"
      CONTRACT_SETTINGS: /config/kanvas.yaml
    env_file:
      - config/.env-kanvas
    entrypoint: |-
      bash -c '
        set -e
        while ! psql -d "$$DATABASE_URL" -c "select 1" ; do
          sleep 1
        done
        /que-pasa/que-pasa --bcd-enable
      '
    restart: on-failure

  peppermint:
    image: ghcr.io/tzconnectberlin/peppermint:1.2
    volumes:
      - ./config:/config
    links:
      - store-db
    entrypoint: |-
      bash -c '
        set -e -x
        while ! psql -d "$$DATABASE_URL" -c "select 1 from peppermint.operations" ; do
          sleep 1
        done

        cp /config/peppermint.json config.json
        node app.mjs
      '
    environment:
      DATABASE_URL: "postgres://store_pguser:store_pgpass@store-db:5432/dev_database"
    restart: on-failure
